name: CI

on:
  - pull_request

jobs:
  lint:
    name: Code formatting & linting
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check formatting with Prettier
        run: pnpm format:check

      - name: Lint
        run: pnpm lint

      - name: Check Typescript
        run: pnpm typecheck

  build:
    name: Test build
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        env:
          GENERAL_SECRET_KEY: unsafe_test_key
          HASURA_GRAPHQL_JWT_SECRET: '{"key": "unsafe_AnEsZxveGsAWoENHGAnEsZxveGsAvxgMtDq9UxgTsDq9UxgTsNHGWoENIoJ", "type": "HS512"}'
          JWT_ISSUER: invalid.localhost
        run: pnpm build

  docker-build:
    name: Test Docker build
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: Build Docker image
        run: docker build --cache-from developer-portal-test:latest -t developer-portal-test:latest .

      # - name: Run API tests
      #   run: docker run developer-portal-test pnpm test:api

  api-tests:
    name: API Tests
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run API tests
        run: |
          pnpm test:api

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: web

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Run services
        run: |
          docker-compose -f ../docker-compose-test.yaml up -d hasura_test

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run integration tests
        run: |
          pnpm test:integration

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run unit tests
        run: |
          pnpm test:unit
